@model Tuple<IEnumerable<SelectListItem>, IEnumerable<SelectListItem>, IEnumerable<SelectListItem>>
@{
    ViewBag.Title = "Home Page";
}

@*I link my tuple data using the @model Tuple <…>
    note to self because each repository is an element now I need to reference
    to it using the tuple system of item 1 to 7 and item 8 being the rest.*@

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@*I add the jQuery reference to my index file. Which allows me to use jQuery methods and function in my project. *@

<script type="text/javascript">
    $(document).ready(function () {
        $("#Item").val(0);
        $("#Item").change(function () {
            var itemId = $("#Item").val();
            GetItemUnitPrice(itemId);

        });

        /*I create a read document functions that runs based on what item is selected. And returns the item id and unit price from the dababase model.*/

        $("input[type=text]").change(function () {
            CalculateSubTotal();
        });

        $("input[type=text]").keyup(function () {
            CalculateBalance();
        });

        $('#btnAddToList').click(function () {
            AddToTheItemList();
        });

        $('#btnPayment').click(function () {
            FinalPayment();
        });
        /*btnPayment runs the finalPayment function which adds the data to the database*/

    });

    function FinalPayment() {
        var objOrderViewModel = {};
        var ListOfOrderDetailViewModel = new Array();

        objOrderViewModel.PaymentTypeId = $('#PaymentType').val();
        objOrderViewModel.CustomerId = $('#Customer').val();
        objOrderViewModel.FinalTotal = $('#txtFinalTotal').val();
        //I use ID selectors to get the id of an element selected then the jQuery Val method extension to get the value and inputed that data to the var. 

        $('#tblRestaurantItemList').find("tr:gt(0)").each(function () {
            var OrderDetailViewModel = {};
            OrderDetailViewModel.Total = parseFloat($(this).find("td:eq(5)").text());
            OrderDetailViewModel.ItemId = parseFloat($(this).find("td:eq(0)").text());
            OrderDetailViewModel.UnitPrice = parseFloat($(this).find("td:eq(2)").text());
            OrderDetailViewModel.Quantity = parseFloat($(this).find("td:eq(3)").text());
            OrderDetailViewModel.Discount = parseFloat($(this).find("td:eq(4)").text());
            ListOfOrderDetailViewModel.push(OrderDetailViewModel);

        });
        objOrderViewModel.ListOfOrderDetailViewModel = ListOfOrderDetailViewModel;
        //Grabs the order details data and put it into the ListOfOrderDetailViewModel

        $.ajax({
            async: true,
            type: 'POST',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(objOrderViewModel),
            url: '/Home/Index',
            success: function (data) {
                alert(data);
            },
            error: function () {
                alert("There is a problem when adding data");
            }
        });
        //This ajax method runs a post request from the webpage to uploade order detail to the database. 
    }

    function RemoveItem(itemId) {
        $(itemId).closest('tr').remove();
        FinalItemTotal();

    }

    function AddToTheItemList() {
        var tblItemList = $('#tblRestaurantItemList');
        var UnitPrice = $('#txtUnitPrice').val();
        var Quantity = $('#txtQuantity').val();
        var Discount = $('#txtDiscount').val();
        var ItemId = $('#Item').val();
        var ItemName = $('#Item option:selected').text();

        var Total = (UnitPrice * Quantity) - Discount;

        var ItemList = "<tr><td hidden>" + ItemId + "</td><td>" + ItemName + "</td><td>" + parseFloat(UnitPrice).toFixed(2) + "</td><td>" + parseFloat(Quantity).toFixed(2)
            + "</td><td>" + parseFloat(Discount).toFixed(2) + "</td><td>" + parseFloat(Total).toFixed(2) + "</td><td> <input type='button' value='Remove' name='remove' class='btn btn-danger' onclick='RemoveItem(this)'/> </td></tr>";

        tblItemList.append(ItemList);
        FinalItemTotal();
        ResetItem();
    }

    function FinalItemTotal() {
        $('#txtFinalTotal').val('0.00');
        var FinalTotal = 0.00;
        $('#tblRestaurantItemList').find("tr:gt(0)").each(function () {
            var Total = parseFloat($(this).find("td:eq(5)").text());
            FinalTotal += Total;
        });

        $('#txtFinalTotal').val(parseFloat(FinalTotal).toFixed(2));
        $('#txtPaymentTotal').val(parseFloat(FinalTotal).toFixed(2));
        $('#txtBalance').val(parseFloat(FinalTotal).toFixed(2));
    }

    function CalculateBalance() {
        var FinalAmount = $('#txtPaymentTotal').val();
        var PaymentAmount = $('#txtPaymentAmount').val();
        var ReturnAmount = $('#txtReturnTotal').val();





        if (parseFloat(PaymentAmount) > parseFloat(FinalAmount)) {
            var ReturnDisplay = parseFloat(PaymentAmount) - parseFloat(FinalAmount);

            $('#txtReturnTotal').val(parseFloat(ReturnDisplay).toFixed(2));

        } else {
            $('#txtReturnTotal').val(0.00);
        }



        var BalanceAmount = parseFloat(FinalAmount) - parseFloat(PaymentAmount) + parseFloat(ReturnAmount);


        $('#txtBalance').val(parseFloat(BalanceAmount).toFixed(2));

        if (parseFloat(BalanceAmount) <= 0) {
            $('#btnPayment').removeAttr("disabled");

        } else {
            $('#btnPayment').attr("disabled", "disabled");
        }
    }

    function ResetItem() {
        $('#txtUnitPrice').val('0.00');
        $('#txtQuantity').val('0');
        $('#txtDiscount').val('0.00');
        $('#Item').val(0);
        $('#txtTotal').val('0.00');


    }

    function CalculateSubTotal() {
        var UnitPrice = $('#txtUnitPrice').val();
        var Quantity = $('#txtQuantity').val();
        var Discount = $('#txtDiscount').val();

        var Total = (UnitPrice * Quantity) - Discount;

        $('#txtTotal').val(parseFloat(Total).toFixed(2));
    }

    function GetItemUnitPrice(itemId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { itemId: itemId },
            url: '/home/getItemUnitPrice',
            success: function (data) {
                $("#txtUnitPrice").val(parseFloat(data).toFixed(2));

            },
            error: function () {
                alert("There is some problem to get the Unit price")
            }
        });
    }

</script>

<style>
    .modal {
        text-align: center;
        padding: 0 !important;
    }

        .modal:before {
            content: '';
            display: inline-block;
            height: 100%;
            vertical-align: top;
            margin-right: -4px;
        }

    .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        min-width: 0;
        margin-top: 20px;
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 10px !important;
    }

    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: .5px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: white;
    }
</style>

@*For my view I set up block of fieldsets and legends to hold my div elements.
    The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form.*@

<fieldset>
    <legend>
        Restaurant
    </legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Customer :
                    @Html.DropDownList("Customer", new SelectList(Model.Item1, "Value", "Text"),
                            new { @class = "form-control" })
                    <!--I used html helper for my Dropdown list so it would be linked to the model when i select a item -->
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Payment Type :
                    @Html.DropDownList("PaymentType", new SelectList(Model.Item3, "Value", "Text"),
                            new { @class = "form-control" })

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total :
                    <input type="text" style="text-align: right" value="0.00" name="FinalTotal" readonly="readonly" id="txtFinalTotal" class="form-control" />
                    <!--Using id Properties in my input box to I can manipulate the data in this box with JavaScript.-->
                </div>
            </div>

        </div>
    </div>
</fieldset>

<fieldset>
    <legend>Restaurant Items</legend>
    <div class="container">
        <div class="row">

            <div class="col-md-4">
                <div class="form-group">
                    Item :
                    @Html.DropDownList("Item", new SelectList(Model.Item2, "Value", "Text"),
                            new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Unit Price :
                    <input style="text-align: right" type="text" readonly="readonly" id="txtUnitPrice" value="0.00" name="UnitPrice" class="form-control" />


                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Quantity :
                    <input style="text-align: right" type="text" id="txtQuantity" value="0" name="Quantity" class="form-control" />

                </div>
            </div>

        </div>

        <div class="row">

            <div class="col-md-4">
                <div class="form-group">
                    Discount :
                    <input style="text-align: right" type="text" id="txtDiscount" value="0.00" name="Discount" class="form-control" />


                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total :
                    <input style="text-align: right" type="text" readonly="readonly" id="txtTotal" value="0.00" name="Total" class="form-control" />

                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" style="margin-top: 18px;" value="Add To List" name="AddToList" id="btnAddToList" class="btn btn-success" />


                </div>
            </div>

        </div>

    </div>
</fieldset>

@*I created a legend that held a table and thread tag that allowed me the display the data in a table after the button was pressed.
    I set up the columns and names with an id so you can add rows in with java script later once the data have been selected.
    This is done with the add element property in JavaScript. *@
<fieldset>
    <legend>Restaurant Listed Items</legend>
    <table style="width: 100%" id="tblRestaurantItemList">
        <thead>
            <tr>
                <th hidden>
                    Item Id
                </th>
                <th>
                    Item Name
                </th>
                <th>
                    Unit Price
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Discount
                </th>
                <th>
                    Total
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
    </table>
</fieldset>

<div style="margin-top: 10px">
    <input data-backdrop="static" data-keydrop="false" data-toggle="modal" data-target="#divPayment" style="float: right" type="button" value="Checkout" name="checkout" id="btnCheckOut" class="btn btn-primary" />
</div>

<div id="divPayment" class="modal fade" role="dialog">
    <!--Payment popup menu -->
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Payment</h4>
            </div>

            <div class="modal-body">
                <div class="container" style="width:auto">
                    <div class="row">
                        <div class="form-group col-md-6">
                            Payment Total :
                            <input style="text-align:right" type="text" id="txtPaymentTotal" readonly="readonly" value="0.00" class="form-control" />
                        </div>

                        <div class="form-group col-md-6">
                            Payment Amount :
                            <input style="text-align:right" type="text" id="txtPaymentAmount" value="0.00" class="form-control" />
                        </div>

                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            Return Total :
                            <input style="text-align:right" type="text" readonly="readonly" id="txtReturnTotal" value="0.00" class="form-control" />
                        </div>

                        <div class="form-group col-md-6">
                            Balance :
                            <input style="text-align:right" type="text" id="txtBalance" readonly="readonly" value="0.00" class="form-control" />
                        </div>

                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button class="btn btn-success" id="btnPayment" value="payment">Payment</button>
                <button class="btn btn-danger" id="btnClose" value="close" data-dismiss="modal">Cancel</button>

            </div>

        </div>

    </div>

</div>